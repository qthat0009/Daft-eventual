name: Build a Daft commit and store the outputted wheel in AWS S3

on:
  workflow_dispatch:
    inputs:
      machine_arch:
        type: choice
        options:
        - x86
        - arm
        description: The machine architecture type to run the build on
        required: false
        default: x86
  workflow_call:
    secrets:
      ACTIONS_AWS_ROLE_ARN:
        description: The ARN of the AWS role to assume
        required: true
    outputs:
      wheel:
        description: The wheel file that was built
        value: ${{ jobs.build-commit.outputs.wheel }}

jobs:
  build-commit:
    runs-on: ${{ inputs.machine_arch == 'x86' && 'buildjet-8vcpu-ubuntu-2004' || 'buildjet-8vcpu-ubuntu-2204-arm' }}
    timeout-minutes: 15 # Remove for ssh debugging
    permissions:
      id-token: write
      contents: read
    outputs:
      wheel: ${{ steps.upload.outputs.wheel }}
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: us-west-2
        role-session-name: build-commit-workflow
        role-to-assume: ${{ secrets.ACTIONS_AWS_ROLE_ARN }}
    - name: Install rust + uv + python
      uses: ./.github/actions/install
    - name: Restore cached build artifacts
      uses: buildjet/cache@v4
      with:
        path: ~/target
        key: ${{ runner.os }}-cargo-deps-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-deps-
    - name: Check if a wheel already exists in AWS S3
      run: |
        uv v
        source .venv/bin/activate
        uv pip install boto3
        wheel_name=$(python .github/assets/get_wheel_name.py ${{ github.sha }} ${{ inputs.machine_arch }})
        echo "wheel_name=$wheel_name" >> $GITHUB_ENV
    - name: Build release wheel
      run: |
        if [ "$wheel_name" -ne 0 ]; then
          echo "Wheel already built"
          exit 0
        fi
        export CARGO_TARGET_DIR=~/target
        uv v
        source .venv/bin/activate
        uv pip install pip maturin boto3
        maturin build --release
    - name: Upload wheel to AWS S3
      id: upload
      run: |
        if [ "$wheel_name" -ne 0 ]; then
          echo "Commit already built"
          echo "wheel=$wheel_name" >> $GITHUB_OUTPUT
        else
          count=$(ls ~/target/wheels/*.whl 2> /dev/null | wc -l)
          if [ "$count" -gt 1 ]; then
            echo "Found more than 1 wheel"
            exit 1
          elif [ "$count" -eq 0 ]; then
            echo "Found no wheels"
            exit 1
          fi
          for file in ~/target/wheels/*.whl; do
            aws s3 cp $file s3://github-actions-artifacts-bucket/builds/${{ github.sha }}/ --acl public-read --no-progress;
            file_basename=$(basename $file)
            echo "wheel=$file_basename" >> $GITHUB_OUTPUT
          done
        fi
        echo "Output python-release-wheel location:" >> $GITHUB_STEP_SUMMARY
        echo "https://us-west-2.console.aws.amazon.com/s3/buckets/github-actions-artifacts-bucket?prefix=builds/${{ github.sha }}/" >> $GITHUB_STEP_SUMMARY
